[settings]
functionname   =   hi_kernel_dp_uni_eth_port_attr_set_cmd;
attributenum   =   42;
attributeflag=   1;

[parameter]
attribute=alias<index>                  type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<enable>                 type<uint>      range<0x0,0xFFFFFFFF>    default<1>;
attribute=alias<mii_mode>               type<uint>      range<0x0,0xFFFFFFFF>    default<2>;
attribute=alias<work_mode>              type<uint>      range<0x0,0xFFFFFFFF>    default<6>;
attribute=alias<work_mode_cap>          type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<auto_neg_cap>           type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<phy_cap>                type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<loop_mode>              type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<yellow_led_work_mode>   type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<yellow_led_freq>        type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<green_led_work_mode>    type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<green_led_freq>         type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<igr_tagged_act>         type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<igr_pri_tagged_act>     type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<igr_untagged_act>       type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<egr_tagged_act>         type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<egr_pri_tagged_act>     type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<egr_untagged_act>       type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<def_tag_tpid>           type<uint>      range<0x0,0xFFFFFFFF>    default<0x8100>;
attribute=alias<def_tag_vlan>           type<uint>      range<0x0,0xFFFFFFFF>    default<1>;
attribute=alias<def_tag_cfi>            type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<def_tag_pri>            type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<eee_attr_en>            type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<wait_time>              type<uint>      range<0x0,0xFFFFFFFF>    default<0xbebc20>;
attribute=alias<sleep_time>             type<uint>      range<0x0,0xFFFFFFFF>    default<0x2625a0>;
attribute=alias<wakeup_time>            type<uint>      range<0x0,0xFFFFFFFF>    default<0x80f>;
attribute=alias<local_phy_eee_cap>      type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<remote_phy_eee_cap>     type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<local_eee_cap_adv>      type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<fctl_en>                type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<high_thr>               type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<low_thr>                type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<car_en>                 type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<car_pause_en>           type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<ebs>                    type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<cbs>                    type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<cir>                    type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<dps>                    type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<dps0>                   type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<dps1>                   type<uint>      range<0x0,0xFFFFFFFF>    default<0>;
attribute=alias<8021x_auth_en>          type<uint>      range<0x0,0xFFFFFFFF>    default<1>;
attribute=alias<stp_status>             type<uint>      range<0x0,0xFFFFFFFF>    default<0>;



[help]
typedef   struct
{
            uint                                                                                          ui_index;
            HI_BOOL_E                                                                           em_enable;

            HI_DP_ETH_MII_MODE_E                                          em_mii_mode;                                                                                                   /*   MII/GMII/RMII/SEDERS等   */
            HI_DP_ETH_WORK_MODE_E                                       em_work_mode;                                                                                                /*   工作模式   */
            hi_dp_eth_work_capability_u                     u_work_mode_cap;                                                                                       /*   工作模式能力   */
            hi_dp_eth_auto_neg_capability_u         u_auto_neg_cap;                                                                                          /*   自协商的能力   */
            hi_dp_eth_phy_capability_u                        u_phy_cap;
            HI_DP_ETH_LOOP_MODE_E                                       em_loop_mode;                                                                                                /*   环回模式   */
            hi_dp_eth_led_attr_s                                          st_led_attr[HI_DP_ETH_LED_NUM];

            hi_dp_tag_attr_s                                                      st_tag_attr;                                                                                                   /*   TAG相关配置   */
            
            hi_dp_eth_eee_attr_s                                          st_eee_attr;                                                                                                   /*   EEE能效配置   */
            hi_dp_eth_phy_eee_capability_u            u_phy_eee_cap[HI_DP_ETH_PORT_TYPE_NUM];                  /*   本地和对端端口的EEE能力，只读   */
            hi_dp_eth_phy_eee_capability_u            u_local_eee_cap_advertise;                                                      /*   本地端口EEE能力声明   */
            hi_dp_eth_fctl_attr_s                                       st_fctl_attr;                                                                                                   /*   流控配置   */
            hi_dp_eth_8021x_attr_s                                    st_8021x_attr;                                                                                                /*   802.1X      相关配置   */
            hi_dp_eth_stp_attr_s                                          st_stp_attr;                                                                                                      /*   端口生成树相关配置   */
            
}hi_dp_uni_eth_port_attr_s;


