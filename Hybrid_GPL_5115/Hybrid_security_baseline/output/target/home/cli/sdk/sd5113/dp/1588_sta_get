[settings]
functionname=0xF7002004;
attributenum=15;
attributeflag = 1 ;   //0:close 1:open

[parameter]
attribute=alias<module>       				type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000C02>; /*全局模块*/
attribute=alias<ui_ts80_0>       			type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_ts80_1>       			type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_ts80_2>       			type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<em_tx_reqram_full>       	type<binary> range<0,20>  			default<0x00000000>;
attribute=alias<em_tx_timeram_full>       	type<binary> range<0,20>  			default<0x00000000>;
attribute=alias<ui_physical_path_delay>     type<binary> range<0,20>  			default<0x00000000>;
attribute=alias<st_tunnel_rx_err>       	type<binary> range<0,20>  			default<0x00000000>;
attribute=alias<ul_time_s>       			type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_timesyn_spcnt>       	type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_current_spcnt>       	type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_spcnt_match_err>       	type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_time_interval_err>       type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_time_los_err>       		type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_1pps_out_times>       	type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;

[help]
typedef struct  
{    
    /* 1588时间戳输出 */
    uint ui_ts80_0;      /* 0~31位     */
    uint ui_ts80_1;      /* 32~63位    */
    uint ui_ts80_2;      /* 64~79位    */

    /* 存储Req报文的RAM满告警 */
    HI_BOOL_E em_tx_reqram_full[HI_DP_1588_TUNNEL_NUM];

    /* 存储Sync/Req/Announce报文的RAM满告警 */
    HI_BOOL_E em_tx_timeram_full[HI_DP_1588_TUNNEL_NUM];

    uint ui_physical_path_delay[HI_DP_1588_TUNNEL_NUM];          /* 物理线路延时 */

    /* 通道接收报文错误 */
    hi_dp_1588_tunnel_rx_err_s st_tunnel_rx_err[HI_DP_1588_TUNNEL_NUM];

    hi_dp_1588_1pps_sta_s st_1pps_sta;                            /* 1pps相关状态 */

}hi_dp_1588_sta_s;
