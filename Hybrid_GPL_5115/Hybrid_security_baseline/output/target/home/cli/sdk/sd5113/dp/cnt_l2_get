[settings]
functionname=0xF7002004;
attributenum=21;
attributeflag = 1 ;   //0:close 1:open

[parameter]
attribute=alias<module>         type<uint>    range<0x0,0xFFFFFFFF>  	   default<0x00000D08>; /*全局模块*/
attribute=alias<arl_age>        type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<age_entry>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<sv_up_fail>     type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<sv_dn_fail>     type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<dv_up_fail>     type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<dv_dn_fail>     type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<learn_fail>     type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<fe0_learn>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<fe1_learn>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<fe2_learn>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<fe3_learn>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<fe4_learn>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<pon_learn>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<cpu_learn>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<age_mport>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<smac_learn>     type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<smac_hit>       type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<egress_0>       type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<dmac_hit>       type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;
attribute=alias<hash_full>      type<uint>    range<0x0,0xFFFFFFFF>        default<0x00000000>;

[help]
typedef struct 
{
    uint arl_age;               /* 老化的次数              */
    uint age_entry;             /* 被老化掉的表项计数      */
    uint sv_up_fail;            /* 上行SMAC+VLAN查表失败, 不包括丢弃报文  */
    uint sv_dn_fail;            /* 下行SMAC+VLAN查表失败, 不包括丢弃报文  */
    uint dv_up_fail;            /* 上行DMAC+VLAN查表失败   */
    uint dv_dn_fail;            /* 下行DMAC+VLAN查表失败   */
    uint learn_fail;            /* 学习失败的次数          */
    uint fe0_learn;             /* 从GE0/FE0学习的次数     */
    uint fe1_learn;             /* 从GE1/FE1学习的次数     */
    uint fe2_learn;             /* 从FE2学习的次数         */
    uint fe3_learn;             /* 从FE3学习的次数         */
    uint fe4_learn;             /* 从FE4学习的次数         */
    uint pon_learn;             /* 从PON学习的次数         */
    uint cpu_learn;             /* 从CPU学习的次数         */
    uint age_mport;             /* 老化多端口表项的次数    */
    uint smac_learn;            /* SMAC学习新表项的次数    */
    uint smac_hit;              /* SMAC命中的次数          */
    uint egress_0;              /* CAP模块egress全0统计    */
    uint dmac_hit;              /* DMAC查表命中统计        */
    uint hash_full;             /* HASH表满                */
}hi_dp_logic_arl_cnt_s;
