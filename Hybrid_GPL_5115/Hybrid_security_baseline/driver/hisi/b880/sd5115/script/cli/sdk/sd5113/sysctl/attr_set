[settings]
functionname=0xF7002005;
attributenum=10;
attributeflag = 1 ;   //0:close 1:open

[parameter]
attribute=alias<module>       type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000101>; /*全局模块*/
attribute=alias<em_chip_work_mode>       type<int>   range<0x01,0x04>  default<0x00000004>;
attribute=alias<em_temp_sensor_en>       type<int>   range<0x0,0x01>  default<0x00000000>;
attribute=alias<em_temp_adj>       type<int>   range<0x0,0x07>  default<0x00000000>;
attribute=alias<em_arm_ahb_rate>       type<int>   range<0x0,0x03>  default<0x00000000>;
attribute=alias<em_ecspll_clk>       type<int>   range<0x0,0x03>  default<0x00000000>;
attribute=alias<usb_hw_ref_clk>       type<int>   range<0x0,0x01>  default<0x00000000>;
attribute=alias<usb_clk_ctrl>       type<int>   range<0x0,0x01>  default<0x00000000>;
attribute=alias<em_wifi_re_en>       type<binary>   range<0,20>  default<0x00000000>;
attribute=alias<em_pci_ahb_en>       type<int>   range<0x0,0x01>  default<0x00000000>;

[help]
/*配置属性*/
typedef struct
{     
    HI_CHIP_WORK_MODE_E em_chip_work_mode;        /*工作模式*/
    HI_BOOL_E em_temp_sensor_en;                  /*温度传感器使能*/              
    HI_SYSCTL_TEMP_ADJ_E em_temp_adj;             /*温度补偿*/
    HI_SYSCTL_ARM_AHB_RATE_E em_arm_ahb_rate;     /*ARM倍频数*/
    HI_SYSCTL_ECSPLLCLK_E em_ecspll_clk;          /*ECSPLL时钟频率*/
    HI_USB_HW_CLK_REF_E  usb_hw_ref_clk;          /*USB HW 时钟源选择属性:本地时钟或者eth时钟*/
    HI_USB_CLK_CTRL usb_clk_ctrl;                 /*USB时钟开关属性：打开或关断*/
    HI_BOOL_E em_wifi_re_en[HI_WIFI_RE_NUM];      /*内部ETHPLL产生的40MHz时钟输出，供外部WiFi芯片作为参考时钟 */
    HI_BOOL_E em_pci_ahb_en;                      /*PCI接口开关*/
} hi_sysctl_attr_s;
