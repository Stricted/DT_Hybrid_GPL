[settings]
functionname=hi_kernel_vif_cmdtype_traffic_stat_clear;  
attributenum=12;
attributeflag = 1 ;   //0:close 1:open

[parameter]
attribute=alias<ifname>              type<string>   range<0x0,32>           default<eth0>;
attribute=alias<car_up_lasttime>     type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_up_token>        type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_stat_up_green>   type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_stat_up_yellow>  type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_stat_up_red>     type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_dn_lasttime>     type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_dn_token>        type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_stat_dn_green>   type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_stat_dn_yellow>  type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<car_stat_dn_red>     type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
attribute=alias<ui_napt_stat>        type<uint>     range<0x0,0xFFFFFFFF>   default<0>;
[help]
typedef struct
{
    hi_uchar8 uc_ifname[HI_KERNEL_VIF_NAMELEN];
    hi_kernel_network_traffic_stat_s st_data;
}hi_kernel_vif_cmdtype_traffic_stat_s;
typedef struct
{
    /*上行car动态数据*/
    hi_uint32 ui_car_up_lasttime;      /*上次计算令牌时间*/
    hi_uint32 ui_car_up_token;         /*当前令牌数,每发送一个报文加一,与模板数值比较*/
    hi_uint32 ui_car_stat_up_green;    /*统计计数*/
    hi_uint32 ui_car_stat_up_yellow;   /*统计计数*/
    hi_uint32 ui_car_stat_up_red;      /*统计计数*/
    /*下行car动态数据*/
    hi_uint32 ui_car_dn_lasttime;      /*上次计算令牌时间*/
    hi_uint32 ui_car_dn_token;         /*当前令牌数,每发送一个报文加一,与模板数值比较*/
    hi_uint32 ui_car_stat_dn_green;    /*统计计数*/
    hi_uint32 ui_car_stat_dn_yellow;   /*统计计数*/
    hi_uint32 ui_car_stat_dn_red;      /*统计计数*/
    /*misc*/
    hi_uint32 ui_napt_stat;    
}hi_kernel_network_traffic_stat_s;