[settings]
functionname=0xF7002004;
attributenum=24;
attributeflag = 1 ;   //0:close 1:open

[parameter]
attribute=alias<module>       		 	type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000E00>; /*全局模块*/
attribute=alias<ui_vlan>             	type<uint>   range<0,4095>  		default<0x00000001>;
attribute=alias<em_cfi>             	type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<ui_pri>              	type<uint>   range<0,7>  			default<0x00000000>;
attribute=alias<em_fec_decode_en>    	type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<ui_mtu>              	type<uint>   range<64,2020>  		default<2020>;
attribute=alias<em_sbc_bit_en>          type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<em_los_active>          type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<ui_gate_timeout>        type<uint>   range<0,255>  			default<51>;
attribute=alias<ui_drift_thr>           type<uint>   range<0,15>  			default<8>;
attribute=alias<ui_rtt_adj>             type<uint>   range<0,2047>  		default<1290>;
attribute=alias<em_snoop_en>            type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<em_private_grant_en>    type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<em_unknown_mpcp_en>     type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<en_pause_en>            type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<ui_alarm_mask>          type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<em_alarm>               type<int>    range<0,23>  			default<0x00000000>;
attribute=alias<em_state>               type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<ui_arg>                 type<uint>   range<0x0,0xFFFFFFFF>  default<0x00000000>;
attribute=alias<ui_llid_index>          type<uint>   range<0,7>  			default<0x00000000>;
attribute=alias<em_force_en>            type<int>    range<0,1>  			default<0x00000000>;
attribute=alias<em_msg_type>            type<int>    range<0,3>  			default<0x00000000>;
attribute=alias<uc_data>                type<binary> range<0,60>  			default<0x00000000>;
attribute=alias<em_sds_clk_evade_en>    type<int>    range<0,1>  			default<0x00000000>;

[help]
/* 配置属性 */
typedef struct
{
    hi_dp_tag_s st_default_tag;         /* 缺省TAG */
    HI_BOOL_E em_fec_decode_en;         /* 下行FEC纠错使能 */       
    uint ui_mtu;                        /* 接收最大帧长, 单位：字节，初始值：1514字节（不包括FCS） */
    HI_BOOL_E em_sbc_bit_en;            /* 广播标志位使能，当使能时，仅LLID为0xFFFF的报文识别为广播；否则，LLID为0x7FFF的报文也识别为广播 */
    HI_LEVEL_E em_los_active;           /* LOS 有效电平 */    
    uint ui_gate_timeout;               /* 开窗时间阀值，单位：ms，初始值：50ms */
    uint ui_drift_thr;                  /* 时间漂移阀值  单位：16ns，初始值：8 */
    uint ui_rtt_adj;                    /* RTT 本地时间补偿   单位为16ns */
    HI_BOOL_E em_snoop_en;              /* 侦听模式使能，此模式下不过滤MPCP帧 */
    HI_BOOL_E em_private_grant_en;      /* 私有Grant功能使能 */
    HI_BOOL_E em_unknown_mpcp_en;       /* 未知道MPCP帧接收使能 */
    HI_BOOL_E en_pause_en;              /* pause帧接收使能 */

    uint ui_alarm_mask;                 /* 告警掩码，用户通过此掩码打开相应的中断 */
    void (*alarm_call_back)(HI_DP_EPON_DN_ALARM_E em_alarm, HI_DP_ALARM_STATE_E em_state, uint ui_arg);
    void (*mpcp_call_back)(hi_mpcp_message_s *st_mpcp);
        
    HI_BOOL_E em_sds_clk_evade_en;             /* LOS时Serdes输出恢复时钟切换去毛刺使能 */  

}hi_dp_epon_dn_attr_s;