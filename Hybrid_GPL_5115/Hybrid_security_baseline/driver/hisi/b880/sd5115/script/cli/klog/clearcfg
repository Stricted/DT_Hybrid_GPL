[settings]
functionname=hi_kernel_log_setcfg;  
attributenum=7;
attributeflag = 1 ;   //0:close 1:open

[parameter]
attribute=alias<module>       type<uint>   range<0x0,0xFFFFFFFF>  default<0xF0000000>; /*全局模块*/
attribute=alias<dbg>          type<uint>   range<0x0,0xFFFFFFFF>  default<0>;/*bit0:7,每个比特对应hi_dbglevel_e枚举*/
attribute=alias<sys>          type<uchar>  range<0x0,0xFF> 	      default<0>;/* 0x0: 关闭不输出; 0x1: 输出所有信息; 0x2: 只输出失败信息; 0x3: 只输出成功信息*/
attribute=alias<print>        type<uchar>  range<0x0,0xFF> 	      default<0>;/* 0x0: 关闭不输出; 0x1: 输出所有信息; */
attribute=alias<flag>         type<uchar>  range<0x0,0xFF> 	      default<0>;
attribute=alias<resv>         type<uchar>  range<0x0,0xFF> 	      default<0>;
attribute=alias<retcode>      type<uint>   range<0x0,0xFFFFFFFF>  default<0>;

[help]
typedef struct  {
    hi_uint32 ui_srcmodule;
    hi_uint32 ui_maskdbgflag;   /*bit0:31,每个比特对应hi_dbglevel_e枚举*/
    hi_uchar8 uc_systraceflag;  /* 0x0: 关闭不输出; 0x1: 输出所有信息; 0x2: 只输出失败信息; 
                                   0x3: 只输出成功信息;0x4: 按照配置返回值精确匹配*/
    hi_uchar8 uc_printflag;
    hi_uchar8 uc_flag;          /*bit0:1远程打印 bit0:0本地打印*/
    hi_uchar8 uc_resv;
    hi_uint32 ui_retcode;
}hi_log_cfg_s;